services:
  users_service:
    container_name: users_service
    image: users-service:1.0.0
    build: ./users_service
    ports:
      - "1000:1000"
    environment:
      - DB_USERS=postgresql://postgres:postgres@users_db:5432/users_db
    depends_on:
      - users_db
  
  users_db:
    container_name: users_db
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users_db
    volumes:
      - users_data:/var/lib/postgresql/data

  tasks_service:
    container_name: tasks_service
    image: tasks-service:1.0.0
    build: ./tasks_service
    ports:
      - "2000:2000"
    environment:
      - DB_TASKS=postgresql://postgres:postgres@tasks_db:5432/tasks_db
    depends_on:
      - tasks_db
    
  tasks_db:
    container_name: tasks_db
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=tasks_db
    volumes:
      - tasks_data:/var/lib/postgresql/data

  rooms_service:
    container_name: rooms_service
    image: rooms-service:1.0.0
    build: ./rooms_service
    ports:
      - "3000:3000"
    environment:
      - DB_ROOMS=postgresql://postgres:postgres@rooms_db:5432/rooms_db
    depends_on:
      - rooms_db

  rooms_db:
    container_name: rooms_db
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rooms_db
    volumes:
      - rooms_data:/var/lib/postgresql/data

  keys_service:
    container_name: keys_service
    image: keys-service:1.0.0
    build: ./foreign_keys_service
    ports:
      - "4000:4000"
    environment:
      - DB_KEYS=postgresql://postgres:postgres@keys_db:5432/keys_db
    depends_on:
      - keys_db
      - rooms_service
      - users_service

  keys_db:
    container_name: keys_db
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keys_db  
    volumes:
      - keys_data:/var/lib/postgresql/data

  api_gateway:
    container_name: api_gateway
    image: api-gateway:1.0.0
    build: ./api_gateway
    ports:
      - "5000:5000"
    depends_on:
      - users_service
      - tasks_service
      - rooms_service
      - keys_service
      - authentication_service

  authentication_service:
    container_name: authentication_service
    image: authentication_service:1.0.0
    build: /auth_service
    ports:
      - "100:100"
    depends_on:
      - users_service

  codes_service:
    container_name: codes_service
    image: codes_service:1.0.0
    build: /code_service
    ports:
      - "200:200"
    depends_on:
      - rooms_service

volumes:
  users_data: {}
  tasks_data: {}
  rooms_data: {}
  keys_data: {}